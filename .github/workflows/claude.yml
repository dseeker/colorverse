name: Claude PR Assistant

on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  issues:
    types: [opened, assigned]
  pull_request_review:
    types: [submitted]

jobs:
  claude-code-action:
    if: |
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review' && contains(github.event.review.body, '@claude')) ||
      (github.event_name == 'issues' && contains(github.event.issue.body, '@claude'))
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
      issues: read
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Setup Node.js for MCP servers
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup Python for MCP servers
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Python uv for fetch server
        run: |
          pip install uv

      - name: Install MCP servers
        run: |
          # Install TypeScript-based MCP servers via npx (they'll be cached)
          echo "Installing Puppeteer MCP server..."
          npx -y @modelcontextprotocol/server-puppeteer --version || true
          
          echo "Installing GitHub MCP server..."
          npx -y @modelcontextprotocol/server-github --version || true
          
          echo "Installing Brave Search MCP server..."
          npx -y @modelcontextprotocol/server-brave-search --version || true
          
          echo "Testing Python fetch server..."
          uvx --help || pip install uvx

      - name: Create MCP configuration
        run: |
          mkdir -p .vscode
          cat > .mcp.json << 'EOF'
          {
            "mcpServers": {
              "fetch": {
                "command": "uvx",
                "args": ["mcp-server-fetch"],
                "env": {}
              },
              "puppeteer": {
                "command": "npx",
                "args": ["-y", "@modelcontextprotocol/server-puppeteer"],
                "env": {}
              },
              "github": {
                "command": "npx", 
                "args": ["-y", "@modelcontextprotocol/server-github"],
                "env": {
                  "GITHUB_PERSONAL_ACCESS_TOKEN": "${{ secrets.GITHUB_TOKEN }}"
                }
              },
              "brave-search": {
                "command": "npx",
                "args": ["-y", "@modelcontextprotocol/server-brave-search"], 
                "env": {
                  "BRAVE_API_KEY": "${{ secrets.BRAVE_API_KEY }}"
                }
              }
            }
          }
          EOF
          
          echo "Created .mcp.json configuration:"
          cat .mcp.json

      - name: Run Claude PR Action
        uses: grll/claude-code-action@beta
        with:
          use_oauth: true
          claude_access_token: ${{ secrets.CLAUDE_ACCESS_TOKEN }}
          claude_refresh_token: ${{ secrets.CLAUDE_REFRESH_TOKEN }}
          claude_expires_at: ${{ secrets.CLAUDE_EXPIRES_AT }}
          model: "claude-sonnet-4-20250514"

          timeout_minutes: "60"
          # Optional: add custom trigger phrase (default: @claude)
          # trigger_phrase: "/claude"
          # Optional: add assignee trigger for issues
          # assignee_trigger: "claude"
          # Optional: add custom environment variables (YAML format)
          # claude_env: |
          #   NODE_ENV: test
          #   DEBUG: true
          #   API_URL: https://api.example.com
          # Optional: limit the number of conversation turns
          # max_turns: "5"